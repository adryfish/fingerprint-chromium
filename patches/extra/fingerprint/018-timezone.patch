diff --git a/components/ungoogled/ungoogled_switches.cc b/components/ungoogled/ungoogled_switches.cc
index 9a5ee1a7a1..797d6f8ff8 100644
--- a/components/ungoogled/ungoogled_switches.cc
+++ b/components/ungoogled/ungoogled_switches.cc
@@ -39,4 +39,7 @@ const char kFingerprintPlatform[] = "fingerprint-platform";
 // Specify the operating system version
 const char kFingerprintPlatformVersion[] = "fingerprint-platform-version";
 
+// Specify the timezone
+const char kFingerprintTimezone[] = "timezone";
+
 }  // namespace switches
diff --git a/components/ungoogled/ungoogled_switches.h b/components/ungoogled/ungoogled_switches.h
index 5cc2775684..c624076165 100644
--- a/components/ungoogled/ungoogled_switches.h
+++ b/components/ungoogled/ungoogled_switches.h
@@ -23,6 +23,7 @@ COMPONENT_EXPORT(UNGOOGLED) extern const char kFingerprintGpuRenderer[];
 COMPONENT_EXPORT(UNGOOGLED) extern const char kFingerprintHardwareConcurrency[];
 COMPONENT_EXPORT(UNGOOGLED) extern const char kFingerprintPlatform[];
 COMPONENT_EXPORT(UNGOOGLED) extern const char kFingerprintPlatformVersion[];
+COMPONENT_EXPORT(UNGOOGLED) extern const char kFingerprintTimezone[];
 }
 
 #endif  // THIRD_PARTY_UNGOOGLED_FINGERPRINTING_SWITCHES_H_
diff --git a/content/browser/renderer_host/render_process_host_impl.cc b/content/browser/renderer_host/render_process_host_impl.cc
index c3b02d356c..4f3c7cdab4 100644
--- a/content/browser/renderer_host/render_process_host_impl.cc
+++ b/content/browser/renderer_host/render_process_host_impl.cc
@@ -3505,6 +3505,7 @@ void RenderProcessHostImpl::PropagateBrowserCommandLineToRenderer(
       switches::kFingerprintHardwareConcurrency,
       switches::kFingerprintPlatform,
       switches::kFingerprintPlatformVersion,
+      switches::kFingerprintTimezone,
       switches::kForceDeviceScaleFactor,
       switches::kForceDisplayColorProfile,
       switches::kForceGpuMemAvailableMb,
diff --git a/third_party/blink/renderer/core/timezone/timezone_controller.cc b/third_party/blink/renderer/core/timezone/timezone_controller.cc
index 8e4166b61c..e2a9df8134 100644
--- a/third_party/blink/renderer/core/timezone/timezone_controller.cc
+++ b/third_party/blink/renderer/core/timezone/timezone_controller.cc
@@ -4,7 +4,9 @@
 
 #include "third_party/blink/renderer/core/timezone/timezone_controller.h"
 
+#include "base/command_line.h"
 #include "base/feature_list.h"
+#include "components/ungoogled/ungoogled_switches.h"
 #include "mojo/public/cpp/bindings/pending_remote.h"
 #include "mojo/public/cpp/bindings/remote.h"
 #include "third_party/blink/public/common/thread_safe_browser_interface_broker_proxy.h"
@@ -60,6 +62,14 @@ String GetTimezoneId(const icu::TimeZone& timezone) {
 }
 
 String GetCurrentTimezoneId() {
+  const base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  if (command_line->HasSwitch(switches::kFingerprintTimezone)) {
+    std::string timezone_str = command_line->GetSwitchValueASCII(switches::kFingerprintTimezone);
+    if (!timezone_str.empty()) {
+      return String::FromUTF8(timezone_str);
+    }
+  }
+
   std::unique_ptr<icu::TimeZone> timezone(icu::TimeZone::createDefault());
   CHECK(timezone);
   return GetTimezoneId(*timezone.get());
@@ -82,9 +92,23 @@ void DispatchTimeZoneChangeEventToFrames() {
 }
 
 bool SetIcuTimeZoneAndNotifyV8(const String& timezone_id) {
-  DCHECK(!timezone_id.empty());
+  const base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  String actual_timezone_id;
+
+  if (command_line->HasSwitch(switches::kFingerprintTimezone)) {
+    std::string timezone_str = command_line->GetSwitchValueASCII(switches::kFingerprintTimezone);
+    if (!timezone_str.empty()) {
+      actual_timezone_id = String::FromUTF8(timezone_str);
+    } else {
+      actual_timezone_id = timezone_id;
+    }
+  } else {
+    DCHECK(!timezone_id.empty());
+    actual_timezone_id = timezone_id;
+  }
+
   std::unique_ptr<icu::TimeZone> timezone(icu::TimeZone::createTimeZone(
-      icu::UnicodeString(timezone_id.Ascii().data(), -1, US_INV)));
+      icu::UnicodeString(actual_timezone_id.Ascii().data(), -1, US_INV)));
   CHECK(timezone);
 
   if (*timezone == icu::TimeZone::getUnknown())
